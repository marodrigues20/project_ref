ext {
  versions = [
          springBoot           : "2.1.6.RELEASE",
          springSleuth         : "2.1.1.RELEASE",
          spring               : "5.2.4.RELEASE",
          junit5               : "5.4.2",
          mockito              : "2.25.0", // We cannot update due to Cannot mock/spy class java.util.UUID
          assertJ              : "3.12.2",
          springFox            : "2.9.2",
          awsSDK               : "1.3.1",
          mapstruct            : "1.3.0.Final",
          micrometer           : "1.2.0",
          httpcomponents       : '4.5.7',
          zipkinBrave          : "5.0.0",
          zipkinAws            : "0.17.0",
          tomcat               : "9.0.22",
          powermock            : "2.0.2",
          junit4               : "4.12",
          h2                   : '1.4.199',
          mysql                : '8.0.17',
          flyway               : '5.2.4',
          commonsIO            : "2.6",
          javaxValidation      : "2.0.1.Final",
          swaggerAnnotations   : "1.5.22",
          logstash             : "6.1",
          wiremock             : "2.25.0",
          jackson              : "2.10.0.pr3",
          jacksonScala         : "2.10.0.pr3",
          jacksonDatabind      : "2.10.0.pr3",
          awaitility           : '4.0.1',
          kafka                : "2.3.0",
          zstd                 : "1.4.2-1",
          guava                : '28.1-jre',
          lombok               : "1.18.10"
  ]
  libs = [
          springBootConfigurationProcessor  : "org.springframework.boot:spring-boot-configuration-processor:$versions.springBoot",
          springBootStarterTest             : "org.springframework.boot:spring-boot-starter-test:$versions.springBoot",
          springSleuth         : "org.springframework.cloud:spring-cloud-starter-sleuth:$versions.springSleuth",
          springJPA            : "org.springframework.boot:spring-boot-starter-data-jpa:$versions.springBoot",
          springKafka          : "org.springframework.kafka:spring-kafka:$versions.springKafka",
          springBootWeb        : "org.springframework.boot:spring-boot-starter-web:$versions.springBoot",
          springBootActuator   : "org.springframework.boot:spring-boot-starter-actuator:$versions.springBoot",
          springBootTest       : "org.springframework.boot:spring-boot-test:$versions.springBoot",
          springValidation     : "org.springframework.boot:spring-boot-starter-validation:$versions.springBoot",
          mockito              : "org.mockito:mockito-core:$versions.mockito",
          assertJ              : "org.assertj:assertj-core:$versions.assertJ",
          flyway               : "org.flywaydb:flyway-core:$versions.flyway",
          h2                   : "com.h2database:h2:$versions.h2",
          mysql                : "mysql:mysql-connector-java:$versions.mysql",
          springfoxSwagger2    : "io.springfox:springfox-swagger2:$versions.springFox",
          springfoxSwaggerUi   : "io.springfox:springfox-swagger-ui:$versions.springFox",
          swaggerAnnotations   : "io.swagger:swagger-annotations:$versions.swaggerAnnotations",
          logStash             : "net.logstash.logback:logstash-logback-encoder:$versions.logstash",
          awsSDK               : "com.amazonaws:aws-xray-recorder-sdk-aws-sdk:$versions.awsSDK",
          awsSDKInstrumentor   : "com.amazonaws:aws-xray-recorder-sdk-aws-sdk-instrumentor:$versions.awsSDK",
          awsSQLInstrumentor   : "com.amazonaws:aws-xray-recorder-sdk-sql-mysql:$versions.awsSDK",
          wiremock             : "com.github.tomakehurst:wiremock:$versions.wiremock",
          mapstruct            : "org.mapstruct:mapstruct-processor:$versions.mapstruct",
          commonsIO            : "commons-io:commons-io:$versions.commonsIO",
          micrometerCore       : "io.micrometer:micrometer-core:$versions.micrometer",
          micrometerPrometheus : "io.micrometer:micrometer-registry-prometheus:$versions.micrometer",
          javaxValidation      : "javax.validation:validation-api:$versions.javaXValidation",
          zipkinBrave          : "io.zipkin.brave:brave-propagation-aws:$versions.zipkinBrave",
          zipkinAws            : "io.zipkin.aws:zipkin-reporter-xray-udp:$versions.zipkinAws",
          junitJupiterApi      : "org.junit.jupiter:junit-jupiter-api:$versions.junit5",
          junitJupiterEngine   : "org.junit.jupiter:junit-jupiter-engine:$versions.junit5",
          junitVintageEngine   : "org.junit.vintage:junit-vintage-engine:$versions.junit5",
          powermockApiMockito2 : "org.powermock:powermock-api-mockito2:$versions.powermock",
          powermockModuleJunit4 : "org.powermock:powermock-module-junit4:$versions.powermock",
          tomcatJdbc           : "org.apache.tomcat:tomcat-jdbc:$versions.tomcat",
          tomcatEmbedCore      : "org.apache.tomcat.embed:tomcat-embed-core:$versions.tomcat",
          tomcatEmbedWebsocket : "org.apache.tomcat.embed:tomcat-embed-websocket:$versions.tomcat",
          httpcomponents       : "org.apache.httpcomponents:httpclient:$versions.httpcomponents",
          jacksonDataType      : "com.fasterxml.jackson.datatype:jackson-datatype-json-org:$versions.jackson",
          jacksonCore          : "com.fasterxml.jackson.core:jackson-core:$versions.jackson",
          jacksonScala         : "com.fasterxml.jackson.module:jackson-module-scala_2.12:$versions.jacksonScala",
          jacksonDatabind      : "com.fasterxml.jackson.core:jackson-databind:$versions.jacksonDatabind",
          awaitility           : "org.awaitility:awaitility:$versions.awaitility",
          kafkaClients         : "org.apache.kafka:kafka-clients:$versions.kafka",
          kafka2               : "org.apache.kafka:kafka_2.12:$versions.kafka",
          kafkaStreams         : "org.apache.kafka:kafka-streams:$versions.kafka",
          guava                : "com.google.guava:guava:$versions.guava",
          zstd                 : "com.github.luben:zstd-jni:$versions.zstd",
          lombok               : "org.projectlombok:lombok:$versions.lombok",
          // 10x Libraries
          restIdempotencyUtil  : "com.tenx.utility:rest-idempotency-util:0.2.8",
          jsrValidation        : "com.tenx.utility:spring-rest-jsr-validation:0.7.2",
          restIdempotencyClientUtil : "com.tenx.utility:rest-idempotency-client-util:0.1.0",
  ]
}

